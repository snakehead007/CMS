@model OverviewModel
@{
    ViewBag.Title = "Overview";
    ViewData["Title"] = "Overview";
}
@section styles{ 
    <link href="/css/home.css" rel="stylesheet" />
}
<div class="ui block header">
    Overview Courses
    <div id="search_box" class="ui search">
        <div class="ui icon input">
            <input id="search" class="prompt" type="search" placeholder="Search courses...">
            <i class="search icon"></i>
        </div>
        <div class="results"></div>
    </div>
</div>

<div id="PartialView">
    <partial name="PartialCourseOverview" />
</div>

@section scripts {
    <script>
        function goToSubjectOverview(courseId) {
                window.location = `@Url.Action("SubjectOverview","Subject")?courseId=${courseId}`
            }
        $(document).ready(function () {
            $('#search').on('keyup', function () {
                $.ajax({
                    url: '@Url.Action("SearchCourses","Home")?search=' + $("#search").val(),
                    type: 'GET',
                    dataType: 'html',
                    error: (xhr) => {
                        $("#PartialView").html(`<div class="ui warning message"><p>No course with '${$("#search").val()}' was found.</p></div>`)
                    },
                    success: function (data) {
                        $('#PartialView').html(data);
                    },
                    fail: () => {
                        message("Our server doesn't seem to respond", "Server error", "orange");
                    }
                })
            });
        });
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/hubs/courses")
            .configureLogging(signalR.LogLevel.Information)
            .build();
        connection.on("@CMS.Hubs.HubExtensions.CourseChangedEvent", () => {
            console.log('Course updated');
            console.log(course);
            search();
        });
        async function start() {
            try {
                await connection.start();
                console.log("SignalR Connected.");
            } catch (err) {
                console.log(err);
                setTimeout(start, 5000);
            }
        };
        connection.onclose(start);
        start();
    </script>
}